substitutions:
  devicename: smart-scales
  upper_devicename: Smart Scales

esphome:
  name: $devicename
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "$upper_devicename Fallback Hotspot"
    password: !secret ap_password

captive_portal:

globals:
  - id: tare_difference
    type: float
    restore_value: yes
    initial_value: '0'

output:
  #  onboard LED
  - platform: gpio
    id: trigger_output
    pin: 2

switch:
  # Tare Function
  - platform: template
    id: tare
    name: $upper_devicename Tare
    turn_on_action:
      - lambda: id(tare_difference) = id(weight).raw_state - 98300;
      - switch.turn_off: tare

number:
  - platform: template
    name: $upper_devicename Trigger Weight
    step: 1
    min_value: -10
    max_value: 10
    optimistic: true
    restore_value: true
    initial_value: -10
    id: trigger_weight    

sensor:
  - platform: wifi_signal
    name: $upper_devicename Wifi Signal
    update_interval: 10s
  - platform: hx711
    name: $upper_devicename Weight
    id: weight
    dout_pin: 19
    clk_pin: 18
    gain: 128
    update_interval: 0.1s
    filters:
      - lambda: 'return x - id(tare_difference);'
      - calibrate_linear:
         - 98300 -> 0
         - 1968000 -> 80.90
      - sliding_window_moving_average:
          window_size: 5
          send_every: 5
    unit_of_measurement: kg
    accuracy_decimals: 1
    on_value_range:
      - above: !lambda 'return id(trigger_weight).state;'
        then:
          - output.turn_on: trigger_output
      - below: !lambda 'return id(trigger_weight).state - 0.01;'
        then:
          - output.turn_off: trigger_output
